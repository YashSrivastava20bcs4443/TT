#include <iostream>
#include <string>

using namespace std;

// Node structure for linked list
struct Node {
    char data;
    Node* next;
};

// Linked list class
class LinkedList {
private:
    Node* head;

public:
    // Constructor
    LinkedList() {
        head = nullptr;
    }

    // Function to add a character at the end of the list
    void addChar(char c) {
        Node* newNode = new Node();
        newNode->data = c;
        newNode->next = nullptr;

        if (head == nullptr) {
            head = newNode;
        } else {
            Node* temp = head;
            while (temp->next != nullptr) {
                temp = temp->next;
            }
            temp->next = newNode;
        }
    }

    // Function to print all the characters in the list
    void printList() {
        Node* temp = head;
        while (temp != nullptr) {
            cout << temp->data;
            temp = temp->next;
        }
        cout << endl;
    }

    // Function to check if the linked list represents a palindrome string
    bool isPalindrome() {
        string str;
        Node* temp = head;

        // Store the characters of the linked list in a string
        while (temp != nullptr) {
            str += temp->data;
            temp = temp->next;
        }

        // Check if the string is a palindrome
        int left = 0;
        int right = str.length() - 1;

        while (left < right) {
            if (str[left] != str[right])
                return false;

            left++;
            right--;
        }

        return true;
    }
};

int main() {
    LinkedList list;

    // Add characters to the list
    list.addChar('a');
    list.addChar('b');
    list.addChar('c');
    list.addChar('b');
    list.addChar('a');

    cout << "List: ";
    list.printList();

    bool isPalin = list.isPalindrome();

    if (isPalin)
        cout << "The list represents a palindrome string." << endl;
    else
        cout << "The list does not represent a palindrome string." << endl;

    return 0;
}
